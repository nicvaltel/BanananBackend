document.addEventListener('DOMContentLoaded', () => {

    async function getSession() {
        try {
            let response = await fetch('/api/getsession');
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            let data = await response.json();
            return data;
        } catch (error) {
            console.error('Error fetching session:', error);
        }
    }

    function initWebSocket(sId, uId) {
        return new Promise((resolve, reject) => {
            const ws = new WebSocket(`ws://localhost:1234/session?sessionId=${sId}`);

            ws.onopen = () => {
                console.log('WebSocket connection established');
                resolve(ws);
            };

            ws.onerror = (error) => {
                console.error('WebSocket error:', error);
                reject(error);
            };

            ws.onclose = () => {
                console.log('WebSocket connection closed');
            };
        });
    }


    // login and init ws routine
    async function mainLogin() {
        try {
            const { sId, uId } = await getSession();
            const ws = await initWebSocket(sId, uId); // calls Domain.newSession in ws init function 

            // Сохраняем данные в sessionStorage
            sessionStorage.setItem('ws', ws.url);
            sessionStorage.setItem('sId', sId);
            if (uId) { sessionStorage.setItem('uId', uId);} // uId is null for anon user

            // Переход на страницу /lobby
            // window.location.href = '/lobby';
        } catch (error) {
            console.error('Error in main function:', error);
        }
    }

    mainLogin();
});